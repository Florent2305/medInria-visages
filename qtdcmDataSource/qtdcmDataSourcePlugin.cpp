// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "qtdcmDataSource.h"
#include "qtdcmDataSourcePlugin.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// qtdcmDataSourcePluginPrivate
// /////////////////////////////////////////////////////////////////

class qtdcmDataSourcePluginPrivate
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// qtdcmDataSourcePlugin
// /////////////////////////////////////////////////////////////////

qtdcmDataSourcePlugin::qtdcmDataSourcePlugin ( QObject *parent ) : dtkPlugin ( parent ), d ( new qtdcmDataSourcePluginPrivate )
{

}

qtdcmDataSourcePlugin::~qtdcmDataSourcePlugin ( void )
{
    delete d;

    d = NULL;
}

bool qtdcmDataSourcePlugin::initialize ( void )
{
    if ( !qtdcmDataSource::registered() )
        dtkWarning() << "Unable to register qtdcmDataSource type";

    return true;
}

bool qtdcmDataSourcePlugin::uninitialize ( void )
{
    return true;
}

QString qtdcmDataSourcePlugin::name ( void ) const
{
    return "qtdcmDataSourcePlugin";
}

QString qtdcmDataSourcePlugin::description ( void ) const
{
    return "Yet another dicom datasource plugin";
}

QStringList qtdcmDataSourcePlugin::tags ( void ) const
{
    return QStringList() << "dicom" << "data" << "source";
}

QStringList qtdcmDataSourcePlugin::types ( void ) const
{
    return QStringList() << "qtdcmDataSource";
}

Q_EXPORT_PLUGIN2 ( qtdcmDataSourcePlugin, qtdcmDataSourcePlugin )
