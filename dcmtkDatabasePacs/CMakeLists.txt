## #################################################################
## Generated by dtkPluginGenerator
## #################################################################

cmake_minimum_required(VERSION 2.8.1)

project(dcmtkDatabasePacsPlugin)
include(files.cmake)

## #################################################################
## Setup version numbering
## #################################################################

set(${PROJECT_NAME}_VERSION_MAJOR 0 CACHE STRING "${PROJECT_NAME} major version number.")
set(${PROJECT_NAME}_VERSION_MINOR 1 CACHE STRING "${PROJECT_NAME} minor version number.")
set(${PROJECT_NAME}_VERSION_BUILD 0 CACHE STRING "${PROJECT_NAME} build version number.")
set(${PROJECT_NAME}_VERSION
  "${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_BUILD}")

mark_as_advanced(${PROJECT_NAME}_VERSION_MAJOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_MINOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_BUILD)

set(CMAKE_COLOR_MAKEFILE ON)
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_INCLUDE_CURRENT_DIR TRUE)


## #################################################################
## Resolve dependencies
## #################################################################

find_package(dtk REQUIRED)
include(${dtk_USE_FILE})
include(dtkPlugin)

find_package(medinria REQUIRED)
include(${medinria_USE_FILE})

find_package(DCMTK2 REQUIRED)
include_directories(${DCMTK_INCLUDE_DIR})

## #################################################################
## Input
## #################################################################

set(${PROJECT_NAME}_HEADERS_MOC
	dcmtkPacsEchoScu.h
	dcmtkPacsFindScu.h
	dcmtkPacsMoveScu.h
	dcmtkPacsStoreScu.h
	dcmtkPacsStoreScp.h
	dcmtkPacsNode.h
	dcmtkPacsResultDataset.h
	dcmtkPacsKey.h
	dcmtkDatabasePacsPlugin.h
	${OTHER_MOC_FILES})

set(${PROJECT_NAME}_SOURCES
	dcmtkPacsEchoScu.cpp
	dcmtkPacsFindScu.cpp
	dcmtkPacsMoveScu.cpp
	dcmtkPacsStoreScu.cpp
	dcmtkPacsStoreScp.cpp
	dcmtkPacsNode.cpp
	dcmtkPacsResultDataset.cpp
	dcmtkPacsKey.cpp
	dcmtkDatabasePacsPlugin.cpp)

## #################################################################
## Build rules
## #################################################################

add_definitions(-DHAVE_CONFIG_H)

qt4_wrap_cpp(${PROJECT_NAME}_SOURCES_MOC ${${PROJECT_NAME}_HEADERS_MOC})


IF(WIN32)		
	SET(WIN32_STD_LIBRARIES 
		ws2_32
		netapi32
		wsock32
		)
ENDIF(WIN32)
		
  
INCLUDE_DIRECTORIES(
  "medDcmtk"
  "medLogger"
)

add_library(${PROJECT_NAME} SHARED
  ${${PROJECT_NAME}_SOURCES_MOC} 
  ${${PROJECT_NAME}_SOURCES}
  ${MED_DCMTK_SOURCES}
  ${MED_LOGGER_SOURCES}
  ${MED_GENERAL_SOURCES}	
  )

target_link_libraries(${PROJECT_NAME}
  ${DCMTK_LIBRARIES}
  ${QT_LIBRARIES}
  ${WIN32_STD_LIBRARIES} 
  dtkCore
  medCore
  medPacs
  )

#Build Groups for Visual Studio
SOURCE_GROUP( "DCMTK" FILES ${MED_DCMTK_SOURCES})
SOURCE_GROUP( "LOGGER" FILES ${MED_LOGGER_SOURCES})

  
OPTION(BUILD_EXAMPLES "Enable this if you want to build the exmples" OFF)
IF(BUILD_EXAMPLES)
	subdirs(examples)
ENDIF(BUILD_EXAMPLES)

## #################################################################
## Install rules
## #################################################################

install(TARGETS ${PROJECT_NAME}
  RUNTIME DESTINATION plugins
  LIBRARY DESTINATION plugins
  ARCHIVE DESTINATION plugins)
