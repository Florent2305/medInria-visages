// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#pragma once

#include <dtkCore/dtkAbstractProcess.h>
#include <medAbstractData.h>
#include <medAbstractImageData.h>
#include <medAbstractSegmentationProcess.h>
#include <itkImageFileReader.h>
#include "animaLesionsSegmentationPluginExport.h"

class animaLesionsSegmentationPrivate;

class ANIMALESIONSSEGMENTATIONPLUGIN_EXPORT animaLesionsSegmentation : public medAbstractSegmentationProcess
{
    Q_OBJECT

public:
    animaLesionsSegmentation(void);
    virtual ~animaLesionsSegmentation(void);

    virtual QString description(void) const;//

    //void emitProgressed(int progression);

    QList<medAbstractParameter*> parameters();

    bool isInteractive();

    virtual medToolBox* toolbox();

    static bool registered(void);
    itk::Image <float,3>::Pointer createInputImages(medAbstractImageData *data);
    itk::Image <unsigned char,3>::Pointer createInputMasks(medAbstractImageData *medInput);


public slots:
    void run();
    //! Input data to the plugin is set through here
    //void setInputImage(medAbstractData *data);

    //! Method to actually start the filter
    int update(void);

    //! The output will be available through here
    medAbstractData *output(void);

private:
    animaLesionsSegmentationPrivate *d;
};

dtkAbstractProcess *createanimaLesionsSegmentation(void);
