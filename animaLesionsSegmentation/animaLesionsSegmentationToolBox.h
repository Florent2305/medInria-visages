//// /////////////////////////////////////////////////////////////////
//// Generated by medPluginGenerator
//// /////////////////////////////////////////////////////////////////

#pragma once

#include <medSegmentationAbstractToolBox.h>
#include "animaLesionsSegmentationPluginExport.h"
#include <medDataIndex.h>
#include <medDataManager.h>

class animaLesionsSegmentationToolBoxPrivate;

class ANIMALESIONSSEGMENTATIONPLUGIN_EXPORT animaLesionsSegmentationToolBox : public medSegmentationAbstractToolBox
{
    Q_OBJECT
    MED_TOOLBOX_INTERFACE("Lesions Segmentation",
                          "Automatic and Manual Lesions Segmentation",
                           << "segmentation")

public:
    animaLesionsSegmentationToolBox(QWidget *parent = 0);
    ~animaLesionsSegmentationToolBox(void);

    medAbstractData *processOutput();
    dtkPlugin* plugin();

    static bool registered(void);
    

signals:
    void success(void);
    void failure(void);

public slots:
    void run(void);
    void updateDamUsage(int);
    void onClearImagesClicked();

    void ChangeAutomaticState(int);
    void ChangeManuState(int);
    void CheckedStrem(bool);
    void CheckedFuzzy(bool);

    void updateAtlasButton(int);
    void updateRejectionFeatures(int);
    void ChangedIntensityState(int);

    void onMaskDropped(const medDataIndex& index);
    void onT1Dropped(const medDataIndex& index);
    void onT2Dropped(const medDataIndex& index);
    void onDPDropped(const medDataIndex& index);
    void onFLAIRDropped(const medDataIndex& index);
    void onT1GdDropped(const medDataIndex& index);

private:
    animaLesionsSegmentationToolBoxPrivate *d;
};
