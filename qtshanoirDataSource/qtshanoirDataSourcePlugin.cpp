// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "qtshanoirDataSource.h"
#include "qtshanoirDataSourcePlugin.h"
#include "qtshanoirDataSourceToolBox.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// qtshanoirDataSourcePluginPrivate
// /////////////////////////////////////////////////////////////////

class qtshanoirDataSourcePluginPrivate 
{
public:
  // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// qtshanoirDataSourcePlugin
// /////////////////////////////////////////////////////////////////

qtshanoirDataSourcePlugin::qtshanoirDataSourcePlugin(QObject *parent) : dtkPlugin(parent), d(new qtshanoirDataSourcePluginPrivate)
{
  
}

qtshanoirDataSourcePlugin::~qtshanoirDataSourcePlugin(void)
{
  delete d;
  
  d = NULL;
}

bool qtshanoirDataSourcePlugin::initialize(void)
{
  if(!qtshanoirDataSource::registered())
    dtkWarning() << "Unable to register qtshanoirDataSource type";
  
  return true;
}

bool qtshanoirDataSourcePlugin::uninitialize(void)
{
  return true;
}

QString qtshanoirDataSourcePlugin::name(void) const
{
  return "qtshanoirDataSourcePlugin";
}

QString qtshanoirDataSourcePlugin::description(void) const
{
  return "Shanoir data source plugin";
}

QStringList qtshanoirDataSourcePlugin::tags(void) const
{
  return QStringList() << "shanoir" << "data" << "source";
}

QStringList qtshanoirDataSourcePlugin::types(void) const
{
  return QStringList() << "qtshanoirDataSource";
}

Q_EXPORT_PLUGIN2(qtshanoirDataSourcePlugin, qtshanoirDataSourcePlugin)
