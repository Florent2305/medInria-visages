// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#pragma once

#include <medAbstractFilteringProcess.h>
#include <medAbstractData.h>

#include "animaNonLocalMeansFilterPluginExport.h"

class animaNonLocalMeansFilterPrivate;

class ANIMANONLOCALMEANSFILTERPLUGIN_EXPORT animaNonLocalMeansFilter : public medAbstractFilteringProcess
{
    Q_OBJECT

public:
    animaNonLocalMeansFilter(void);
    virtual ~animaNonLocalMeansFilter(void);

    virtual QString description(void) const;

    void emitProgressed(int progression);

    static bool registered(void);
    
    // Parameters setting
    void setPatchHalfSize(unsigned int patchHalfSize);
    void setSearchNeighborhood(unsigned int searchNeighborhood);
    void setSearchStepSize(unsigned int searchStepSize);
    void setWeightThreshold(double weightThreshold);
    void setBetaParameter(double betaParameter);
    void setMeanMinThreshold(double meanMinThreshold);
    void setVarMinThreshold(double varMinThreshold);
    void setNumberOfThreads(unsigned int nbThread);
    void setWeightedMethod(int weightedMethod);
    void setTemporalImage(int temporalImage);

public slots:

    //! Input data to the plugin is set through here
    void setInputImage(medAbstractData *data);

    //! Method to actually start the filter
    int update(void);

    //! The output will be available through here
    medAbstractData *output(void);

private:
    animaNonLocalMeansFilterPrivate *d;
};

dtkAbstractProcess *createanimaNonLocalMeansFilter(void);
