// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef VISTALPROCESSGRAPHCUTSEG_H
#define VISTALPROCESSGRAPHCUTSEG_H

#include <dtkCore/dtkAbstractProcess.h>

#include "vistalProcessGraphCutSegPluginExport.h"

class vistalProcessGraphCutSegPrivate;

// /////////////////////////////////////////////////////////////////
// vistalProcessGraphCutSeg interface
// /////////////////////////////////////////////////////////////////

class VISTALPROCESSGRAPHCUTSEGPLUGIN_EXPORT vistalProcessGraphCutSeg : public dtkAbstractProcess
{
    Q_OBJECT

public:
             vistalProcessGraphCutSeg(void);
    virtual ~vistalProcessGraphCutSeg(void);

public:
    virtual QString description(void) const;
    virtual QString identifier(void) const;

    static bool registered(void);

public slots:
    void setInput(dtkAbstractData *data, int channel); // mask, images
    void setParameter(double  data, int channel); // parameters (number of input images, alpha, beta, sigma)
    int update(void);
    dtkAbstractData *output(void);

private:

    vistalProcessGraphCutSegPrivate *d;
    template <typename PixelType> void createSeparatedMasks ();
};

dtkAbstractProcess *createVistalProcessGraphCutSeg(void);

#endif
