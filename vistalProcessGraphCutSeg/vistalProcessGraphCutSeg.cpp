// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "vistalProcessGraphCutSeg.h"

#include <dtkCore/dtkAbstractProcessFactory.h>
#include <dtkCore/dtkAbstractProcess_p.h>

// /////////////////////////////////////////////////////////////////
// vistalProcessGraphCutSegPrivate interface
// /////////////////////////////////////////////////////////////////

class vistalProcessGraphCutSegPrivate : public dtkAbstractProcessPrivate
{
public:
    vistalProcessGraphCutSegPrivate(vistalProcessGraphCutSeg *q = 0) : dtkAbstractProcessPrivate(q) {}
    vistalProcessGraphCutSegPrivate(const vistalProcessGraphCutSegPrivate& other) : dtkAbstractProcessPrivate(other) {} // Complete copy ctror with your local members.

public:
    ~vistalProcessGraphCutSegPrivate(void) {}

public:
    // private members are put here, eg
    // int index;
};

////////////////////////////////////////////////////
// vistalProcessGraphCutSeg protected constructors
////////////////////////////////////////////////////

DTK_IMPLEMENT_PRIVATE(vistalProcessGraphCutSeg, dtkAbstractProcess);

// /////////////////////////////////////////////////////////////////
// vistalProcessGraphCutSeg implementation
// /////////////////////////////////////////////////////////////////

vistalProcessGraphCutSeg::vistalProcessGraphCutSeg(void) : dtkAbstractProcess(*new vistalProcessGraphCutSegPrivate(this), 0)
{

}

vistalProcessGraphCutSeg::vistalProcessGraphCutSeg(const vistalProcessGraphCutSeg& other) : dtkAbstractProcess(*new vistalProcessGraphCutSegPrivate(*other.d_func()), other)
{

}

vistalProcessGraphCutSeg::~vistalProcessGraphCutSeg(void)
{

}

vistalProcessGraphCutSeg& vistalProcessGraphCutSeg::operator = (const vistalProcessGraphCutSeg& other)
{
    dtkAbstractProcess::operator=(other);

    // Complete here with respect to your local d-pointer as follows:
    //
    // DTK_D(vistalProcessGraphCutSeg);
    //
    // d->index = other.d_func()->index;

    return *this;
}

bool vistalProcessGraphCutSeg::registered(void)
{
    return dtkAbstractProcessFactory::instance()->registerProcessType("vistalProcessGraphCutSeg", createVistalProcessGraphCutSeg);
}

QString vistalProcessGraphCutSeg::description(void) const
{
    return "vistalProcessGraphCutSeg";
}

QString vistalProcessGraphCutSeg::identifier(void) const
{
    return "vistalProcessGraphCutSeg";
}

// /////////////////////////////////////////////////////////////////
// Type instantiation
// /////////////////////////////////////////////////////////////////

dtkAbstractProcess *createVistalProcessGraphCutSeg(void)
{
    return new vistalProcessGraphCutSeg;
}
