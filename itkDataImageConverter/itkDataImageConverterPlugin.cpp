// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "itkDataImageTov3dDataImageConverter.h"
#include "itkDataImageConverterPlugin.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// itkDataImageConverterPluginPrivate
// /////////////////////////////////////////////////////////////////

class itkDataImageConverterPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// itkDataImageConverterPlugin
// /////////////////////////////////////////////////////////////////

itkDataImageConverterPlugin::itkDataImageConverterPlugin(QObject *parent) : dtkPlugin(parent), d(new itkDataImageConverterPluginPrivate)
{

}

itkDataImageConverterPlugin::~itkDataImageConverterPlugin(void)
{
    delete d;

    d = NULL;
}

bool itkDataImageConverterPlugin::initialize(void)
{
    if(!itkDataImageTov3dDataImageConverter::registered())
	dtkWarning() << "Unable to register itkDataImageConverter type";

    return true;
}

bool itkDataImageConverterPlugin::uninitialize(void)
{
    return true;
}

QString itkDataImageConverterPlugin::name(void) const
{
    return "itkDataImageConverterPlugin";
}

QString itkDataImageConverterPlugin::description(void) const
{
    return "Convert ITK data image types to something";
}

QStringList itkDataImageConverterPlugin::tags(void) const
{
    return QStringList() << "itk" << "data" << "image" << "converter" << "vtk";
}

QStringList itkDataImageConverterPlugin::types(void) const
{
    return QStringList() << "itkDataImageTov3dDataImageConverter";
}

Q_EXPORT_PLUGIN2(itkDataImageConverterPlugin, itkDataImageConverterPlugin)
