## #################################################################
## Generated by dtkPluginGenerator
## #################################################################

cmake_minimum_required(VERSION 2.8.1)

project(itkDataImagePlugin)

## #################################################################
## Setup version numbering
## #################################################################

set(${PROJECT_NAME}_VERSION_MAJOR 0 CACHE STRING "${PROJECT_NAME} major version number.")
set(${PROJECT_NAME}_VERSION_MINOR 1 CACHE STRING "${PROJECT_NAME} minor version number.")
set(${PROJECT_NAME}_VERSION_BUILD 0 CACHE STRING "${PROJECT_NAME} build version number.")
set(${PROJECT_NAME}_VERSION
  "${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_BUILD}")

mark_as_advanced(${PROJECT_NAME}_VERSION_MAJOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_MINOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_BUILD)

set(CMAKE_COLOR_MAKEFILE ON)
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_INCLUDE_CURRENT_DIR TRUE)

## #################################################################
## Resolve dependencies
## #################################################################

find_package(dtk REQUIRED)
include(${dtk_USE_FILE})
include(dtkPlugin)

find_package(ITK REQUIRED)
if(NOT ITK_USE_REVIEW)
  message(FATAL_ERROR "ITK must be build with option ITK_USE_REVIEW to ON")
endif(NOT ITK_USE_REVIEW)
include(${ITK_USE_FILE})

## #################################################################
## Input
## #################################################################

set(${PROJECT_NAME}_HEADERS_MOC
  itkDataImagePlugin.h
  itkDataImageChar3.h
  itkDataImageUChar3.h
  itkDataImageShort3.h
  itkDataImageUShort3.h
  itkDataImageUShort4.h
  itkDataImageInt3.h
  itkDataImageUInt3.h
  itkDataImageLong3.h
  itkDataImageULong3.h
  itkDataImageFloat3.h
  itkDataImageFloat4.h
  itkDataImageDouble3.h
  itkDataImageVector3.h
  itkDataImageRGB3.h
  itkDataImageShort4.h)

set(${PROJECT_NAME}_HEADERS
  ${${PROJECT_NAME}_HEADERS_MOC})

set(${PROJECT_NAME}_SOURCES
  itkDataImagePlugin.cpp
  itkDataImageChar3.cpp
  itkDataImageUChar3.cpp
  itkDataImageShort3.cpp
  itkDataImageUShort3.cpp
  itkDataImageUShort4.cpp
  itkDataImageInt3.cpp
  itkDataImageUInt3.cpp
  itkDataImageLong3.cpp
  itkDataImageULong3.cpp
  itkDataImageFloat3.cpp
  itkDataImageFloat4.cpp
  itkDataImageDouble3.cpp
  itkDataImageVector3.cpp
  itkDataImageRGB3.cpp
  itkDataImageShort4.cpp)

# Include header files for Visual Studio.
SOURCE_GROUP("Header Files" REGULAR_EXPRESSION .*\\.h\$)

## #################################################################
## Build rules
## #################################################################

qt4_wrap_cpp(${PROJECT_NAME}_SOURCES_MOC ${${PROJECT_NAME}_HEADERS_MOC})

add_library(${PROJECT_NAME} SHARED
  ${${PROJECT_NAME}_SOURCES_MOC} 
  ${${PROJECT_NAME}_HEADERS} 
  ${${PROJECT_NAME}_SOURCES})

target_link_libraries(${PROJECT_NAME}
  ${QT_LIBRARIES}
  dtkCore
  ${ITK_LIBRARIES})

if (BUILD_TESTING)
  add_subdirectory(Testing)
endif (BUILD_TESTING)

## #################################################################
## Install rules
## #################################################################

install(TARGETS ${PROJECT_NAME}
  RUNTIME DESTINATION plugins
  LIBRARY DESTINATION plugins
  ARCHIVE DESTINATION plugins)
