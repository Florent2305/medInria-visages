// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "Image3D.hh"
#include "vistalDataImageSChar3.h"

#include <dtkCore/dtkAbstractDataFactory.h>

// /////////////////////////////////////////////////////////////////
// vistalDataImageSChar3Private
// /////////////////////////////////////////////////////////////////

class vistalDataImageSChar3Private
{
public:
  vistal::Image3D<char> * image;
};

// /////////////////////////////////////////////////////////////////
// vistalDataImageSChar3
// /////////////////////////////////////////////////////////////////

vistalDataImageSChar3::vistalDataImageSChar3(void) : dtkAbstractDataImage(), d(new vistalDataImageSChar3Private)
{
  d->image = 0;
}

vistalDataImageSChar3::~vistalDataImageSChar3(void)
{
	if (d->image)
		delete d->image;
	
	delete d;
	d = 0;
}

bool vistalDataImageSChar3::registered(void)
{
    return dtkAbstractDataFactory::instance()->registerDataType("vistalDataImageSChar3", createVistalDataImageSChar3);
}

QString vistalDataImageSChar3::description(void) const
{
    return "vistalDataImageSChar3";
}

void *vistalDataImageSChar3::data()
{
  return d->image;
}

void *vistalDataImageSChar3::output()
{
	return d->image;
}

void vistalDataImageSChar3::setData(void* data)
{
  d->image = static_cast<vistal::Image3D<char> *> (data);
}

int vistalDataImageSChar3::xDimension(void)
{
  if (d->image != NULL)
    return d->image->nbx;
  else
    return -1;
}

int vistalDataImageSChar3::yDimension(void)
{
  if (d->image != NULL)
    return d->image->nby;
  else
    return -1;
}

int vistalDataImageSChar3::zDimension(void)
{
  if (d->image != NULL)
    return d->image->nbz;
  else
    return -1;
}

int vistalDataImageSChar3::tDimension(void)
{
  if (d->image != NULL)
    return d->image->nbt;
  else
    return -1;
}


// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractData *createVistalDataImageSChar3(void)
{
    return new vistalDataImageSChar3;
}
