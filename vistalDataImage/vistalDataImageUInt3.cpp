// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "Image3D.hh"
#include "vistalDataImageUInt3.h"

#include <dtkCore/dtkAbstractDataFactory.h>

// /////////////////////////////////////////////////////////////////
// vistalDataImageUInt3Private
// /////////////////////////////////////////////////////////////////

class vistalDataImageUInt3Private
{
public:
  vistal::Image3D<unsigned int> * image;
};

// /////////////////////////////////////////////////////////////////
// vistalDataImageUInt3
// /////////////////////////////////////////////////////////////////

vistalDataImageUInt3::vistalDataImageUInt3(void) : dtkAbstractDataImage(), d(new vistalDataImageUInt3Private)
{
  d->image = 0;
}

vistalDataImageUInt3::~vistalDataImageUInt3(void)
{
	if (d->image)
		delete d->image;
	
	delete d;
	d = 0;
}

bool vistalDataImageUInt3::registered(void)
{
    return dtkAbstractDataFactory::instance()->registerDataType("vistalDataImageUInt3", createVistalDataImageUInt3);
}

QString vistalDataImageUInt3::description(void) const
{
    return "vistalDataImageUInt3";
}

void *vistalDataImageUInt3::data()
{
  return d->image;
}

void *vistalDataImageUInt3::output()
{
	return d->image;
}

void vistalDataImageUInt3::setData(void* data)
{
  d->image = static_cast<vistal::Image3D<unsigned int> *> (data);
}

int vistalDataImageUInt3::xDimension(void)
{
  if (d->image != NULL)
    return d->image->nbx;
  else
    return -1;
}

int vistalDataImageUInt3::yDimension(void)
{
  if (d->image != NULL)
    return d->image->nby;
  else
    return -1;
}

int vistalDataImageUInt3::zDimension(void)
{
  if (d->image != NULL)
    return d->image->nbz;
  else
    return -1;
}

int vistalDataImageUInt3::tDimension(void)
{
  if (d->image != NULL)
    return d->image->nbt;
  else
    return -1;
}


// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractData *createVistalDataImageUInt3(void)
{
    return new vistalDataImageUInt3;
}
