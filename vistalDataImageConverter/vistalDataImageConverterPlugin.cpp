// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "vistalDataImageToItkDataImageConverter.h"
#include "vistalDataImageConverterPlugin.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// vistalDataImageConverterPluginPrivate
// /////////////////////////////////////////////////////////////////

class vistalDataImageConverterPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// vistalDataImageConverterPlugin
// /////////////////////////////////////////////////////////////////

vistalDataImageConverterPlugin::vistalDataImageConverterPlugin(QObject *parent) : dtkPlugin(parent), d(new vistalDataImageConverterPluginPrivate)
{

}

vistalDataImageConverterPlugin::~vistalDataImageConverterPlugin(void)
{
    delete d;

    d = NULL;
}

bool vistalDataImageConverterPlugin::initialize(void)
{
    if(!vistalDataImageToItkDataImageConverter::registered())
	dtkWarning() << "Unable to register vistalDataImageToItkDataImageConverter type";

    return true;
}

bool vistalDataImageConverterPlugin::uninitialize(void)
{
    return true;
}

QString vistalDataImageConverterPlugin::name(void) const
{
    return "vistalDataImageConverterPlugin";
}

QString vistalDataImageConverterPlugin::description(void) const
{
    return "Convert vistal data image to something";
}

QStringList vistalDataImageConverterPlugin::tags(void) const
{
    return QStringList() << "vistal" << "data" << "image" << "converter" << "itk";
}

QStringList vistalDataImageConverterPlugin::types(void) const
{
    return QStringList() << "vistalDataImageToItkDataImageConverter";
}

Q_EXPORT_PLUGIN2(vistalDataImageConverterPlugin, vistalDataImageConverterPlugin)
