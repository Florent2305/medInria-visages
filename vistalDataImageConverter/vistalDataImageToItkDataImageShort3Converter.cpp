// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "vistalDataImageToItkDataImageShort3Converter.h"
#include "itkImage3D.hh"
#include "Image3D.hh"

#include <dtkCore/dtkAbstractData.h>
#include <dtkCore/dtkAbstractDataFactory.h>

// /////////////////////////////////////////////////////////////////
// vistalDataImageToItkDataImageShort3ConverterPrivate
// /////////////////////////////////////////////////////////////////

class vistalDataImageToItkDataImageShort3ConverterPrivate
{
    public:
        itkImage3D<short> * short3Converter;

        dtkAbstractData * output;

};

// /////////////////////////////////////////////////////////////////
// vistalDataImageToItkDataImageShort3Converter
// /////////////////////////////////////////////////////////////////

vistalDataImageToItkDataImageShort3Converter::vistalDataImageToItkDataImageShort3Converter(void) :
    dtkAbstractDataConverter(), d(new vistalDataImageToItkDataImageShort3ConverterPrivate)
{
    d->output = dtkAbstractDataFactory::instance()->create("itkDataImageShort3");

    d->short3Converter = NULL;
}

vistalDataImageToItkDataImageShort3Converter::~vistalDataImageToItkDataImageShort3Converter(void)
{

}

bool
vistalDataImageToItkDataImageShort3Converter::registered(void)
{
    return dtkAbstractDataFactory::instance()->registerDataConverterType("vistalDataImageToItkDataImageShort3Converter", QStringList() << "vistalDataImageSShort3", "itkDataImageShort3", createVistalDataImageToItkDataImageShort3Converter);
}

QString
vistalDataImageToItkDataImageShort3Converter::description(void) const
{
    return "vistalDataImageToItkDataImageShort3Converter";
}

QStringList
vistalDataImageToItkDataImageShort3Converter::fromTypes(void) const
{
    return QStringList() << "vistalDataImageSShort3";
}

QString
vistalDataImageToItkDataImageShort3Converter::toType(void) const
{
    return "itkDataImageShort3";
}

dtkAbstractData *
vistalDataImageToItkDataImageShort3Converter::convert(void)
{
    if (!d->output)
        return NULL;

    dtkAbstractData *data = this->data();
    if (!data)
        return NULL;

    if (data->description() == "vistalDataImageSShort3") {
        if ( vistal::Image3D<short>* image = static_cast<vistal::Image3D<short>*>( data->data() ) ) {
            if (d->short3Converter == NULL)
                d->short3Converter = new itkImage3D<short> ;
            d->short3Converter->SetImage3D(*image);
            d->output->setData(d->short3Converter->GetOutput());
        }
    }
    return d->output;
}

// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractDataConverter *
createVistalDataImageToItkDataImageShort3Converter(void)
{
    return new vistalDataImageToItkDataImageShort3Converter;
}
