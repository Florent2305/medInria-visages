// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#pragma once

#include <medFilteringAbstractToolBox.h>
#include "animaSymmetryPlanePluginExport.h"

class animaSymmetryPlaneToolBoxPrivate;

class ANIMASYMMETRYPLANEPLUGIN_EXPORT animaSymmetryPlaneToolBox : public medFilteringAbstractToolBox
{
    Q_OBJECT
    MED_TOOLBOX_INTERFACE("Symmetry Plane",
                          "Symmetry plane computation",
                           << "filtering")

public:
    animaSymmetryPlaneToolBox(QWidget *parent = 0);
    ~animaSymmetryPlaneToolBox(void);

    medAbstractData *processOutput();
    dtkPlugin* plugin();

    static bool registered(void);
    
    void update(medAbstractData* data) {}

signals:
    void success(void);
    void failure(void);

public slots:
    void run(void);
    void saveRealignTransformFile(void);
    void saveTransformFile(void);
    void updateMetric(int);

private:
    animaSymmetryPlaneToolBoxPrivate *d;

};
