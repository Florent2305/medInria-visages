// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef ANIMASYMMETRYPLANE_H
#define ANIMASYMMETRYPLANE_H

#include <dtkCore/dtkAbstractProcess.h>

#include "animaSymmetryPlanePluginExport.h"


class animaSymmetryPlanePrivate;


class ANIMASYMMETRYPLANEPLUGIN_EXPORT animaSymmetryPlane : public dtkAbstractProcess
{
    Q_OBJECT

public:
    animaSymmetryPlane(void);

    virtual ~animaSymmetryPlane(void);

    virtual QString description(void) const;

    static bool registered(void);

    void saveTransformFile(QString filename);

    void saveRealignTransformFile(QString filename);

    void emitProgress(int prog);

public slots:

    //! Input data to the plugin is set through here
    void setInput(dtkAbstractData *data);

    //! Parameters are set through here, channel allows to handle multiple parameters
    void setParameter(double  data, int channel);

    //! Method to actually start the filter
    int update(void);

    //! The output will be available through here
    dtkAbstractData *output(void);


private:
    animaSymmetryPlanePrivate *d;

};

dtkAbstractProcess *createAnimaSymmetryPlane(void);

#endif
