// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "v3dViewPublic.h"
#include "v3dViewPublicFiberInteractor.h"
#include "v3dViewPublicMeshInteractor.h"
#include "v3dViewPublicFuseInteractor.h"
#include "v3dViewPublicPlugin.h"
#include "vtkLogForwarder.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// v3dViewPublicPluginPrivate
// /////////////////////////////////////////////////////////////////

class v3dViewPublicPluginPrivate 
{
public:
  v3dViewPublicPluginPrivate()
  {
      forwarder = vtkLogForwarder::New();
  }
  ~v3dViewPublicPluginPrivate()
  {
      forwarder->Delete();
  }
  // Class variables go here.
  vtkLogForwarder* forwarder;
};

// /////////////////////////////////////////////////////////////////
// v3dViewPublicPlugin
// /////////////////////////////////////////////////////////////////

v3dViewPublicPlugin::v3dViewPublicPlugin(QObject *parent) : dtkPlugin(parent), d(new v3dViewPublicPluginPrivate)
{

}

v3dViewPublicPlugin::~v3dViewPublicPlugin(void)
{
    delete d;

    d = NULL;
}

bool v3dViewPublicPlugin::initialize(void)
{
    if(!v3dViewPublic::registered())
	dtkWarning() << "Unable to register v3dViewPublic type";

    if(!v3dViewPublicFiberInteractor::registered())
	dtkWarning() << "Unable to register v3dViewPublicFiberInteractor type";

    if(!v3dViewPublicMeshInteractor::registered())
	dtkWarning() << "Unable to register v3dViewPublicMeshInteractor type";

    if(!v3dViewPublicFuseInteractor::registered())
	dtkWarning() << "Unable to register v3dViewPublicFuseInteractor type";

    return true;
}

bool v3dViewPublicPlugin::uninitialize(void)
{
    return true;
}

QString v3dViewPublicPlugin::name(void) const
{
    return "v3dViewPublicPlugin";
}

QString v3dViewPublicPlugin::description(void) const
{
    return "";
}

QStringList v3dViewPublicPlugin::tags(void) const
{
    return QStringList() << "v3d" << "view" << "public";
}

QStringList v3dViewPublicPlugin::types(void) const
{
    return QStringList() << "v3dViewPublic";
}

Q_EXPORT_PLUGIN2(v3dViewPublicPlugin, v3dViewPublicPlugin)
