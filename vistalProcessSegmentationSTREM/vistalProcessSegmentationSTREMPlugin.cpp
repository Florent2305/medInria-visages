// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "vistalProcessSegmentation.h"
#include "vistalProcessSegmentationPlugin.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// vistalProcessSegmentationPluginPrivate
// /////////////////////////////////////////////////////////////////

class vistalProcessSegmentationPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// vistalProcessSegmentationPlugin
// /////////////////////////////////////////////////////////////////

vistalProcessSegmentationPlugin::vistalProcessSegmentationPlugin(QObject *parent) : dtkPlugin(parent), d(new vistalProcessSegmentationPluginPrivate)
{

}

vistalProcessSegmentationPlugin::~vistalProcessSegmentationPlugin(void)
{
    delete d;

    d = NULL;
}

bool vistalProcessSegmentationPlugin::initialize(void)
{
    if(!vistalProcessSegmentation::registered())
	dtkWarning() << "Unable to register vistalProcessSegmentation type";

    return true;
}

bool vistalProcessSegmentationPlugin::uninitialize(void)
{
    return true;
}

QString vistalProcessSegmentationPlugin::name(void) const
{
    return "vistalProcessSegmentationPlugin";
}

QString vistalProcessSegmentationPlugin::description(void) const
{
    return "";
}

QStringList vistalProcessSegmentationPlugin::tags(void) const
{
    return QStringList();
}

QStringList vistalProcessSegmentationPlugin::types(void) const
{
    return QStringList() << "vistalProcessSegmentation";
}

Q_EXPORT_PLUGIN2(vistalProcessSegmentationPlugin, vistalProcessSegmentationPlugin)
